Wed Feb 26, 2014
- Bugra Gedik and Robert Soule

- bg: was reading some DB papers
  - Row stores vs. column stores

- rjs: think of AQuery:
  - http://www.vldb.org/conf/2003/papers/S11P03.pdf

- bg: there is some work on hybrid systems that are a cross between 
      row and column stores
- bg: In a graph db, you don't need to just store the edges, but 
      the edge data as well. 
- bg: Often the case there are more edges for the temporal data

- bg: Note that you need to store the edge data in blocks for locality.
- bg: The Problem: The edge data might be large. Not all queries will access all
  attributes. If you keep all the information in the block, then you don't have
  that many edges in the block, so you lose the benefit of the blocking.

- bg: Paper called H2O proposed an adaptive system
- bg: Maybe we could "learn" the structure, to re-organize the disk?

- rjs: What is the query model for this data?
- rjs: What are current approaches to storing graph dbs on disk?
  - Bugra will send this to Robert...

- Bugra will share the code for his other graph db (in C++) 
  - relies on two other libraries:
    - LevelDB
    - RTree (spatial index library)

Action items:
  - Bugra will send me:
     - H2O paper
     - Graph DB survey
     - Bit bucket
     - Write ideas in a few paragraphs
  - In the future: access to code




